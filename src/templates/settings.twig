{% import "_includes/forms" as forms %}

{% if volumes|length %}

	{{ forms.selectField({
		id:           "volume",
		name:         "volume",
		label:        "Upload Volume",
		instructions: "Where you want to upload the images to.",
		first:        true,
		required:     true,
		value:        settings.volume,
		options:      volumes,
	}) }}

	<hr>

	{{ forms.selectField({
		id:           "authorField",
		name:         "authorField",
		label:        "Image author field",
		instructions: "Store the name of the images author to optionally credit them on your site.",
		first:        true,
		value:        settings.authorField,
		options:      [],
	}) }}

	{{ forms.selectField({
		id:           "authorUrlField",
		name:         "authorUrlField",
		label:        "Image author URL field",
		instructions: "Store the URL of the image authors Unsplash profile.",
		value:        settings.authorUrlField,
		options:      [],
	}) }}

	{{ forms.selectField({
		id:           "colorField",
		name:         "colorField",
		label:        "Image primary color field",
		instructions: "Store the primary color of the image. <i>Why not do more with color using <a href='https://github.com/ethercreative/colormixer' target='_blank'>Color Mixer</a>!</i>",
		value:        settings.colorField,
		options:      [],
	}) }}

	<script>
		function ns (name) {
			return "settings-" + name + "-field";
		}

		const volumes        = {{ volumes|json_encode|raw }}
			, volume         = document.getElementById(ns("volume")).querySelector("select")
			, authorField    = document.getElementById(ns("authorField")).querySelector("select")
			, authorUrlField = document.getElementById(ns("authorUrlField")).querySelector("select")
			, colorField     = document.getElementById(ns("colorField")).querySelector("select");

		const authorFieldValue    = "{{ settings.authorField }}"
			, authorUrlFieldValue = "{{ settings.authorUrlField }}"
			, colorFieldValue     = "{{ settings.colorField }}";

		function SplashSettings () {
			volume.addEventListener("change", SplashSettings.OnChange);
			SplashSettings.OnChange();
		}

		SplashSettings.OnChange = function () {
			for (let i = 0; i < volumes.length; i++) {
				if (volumes[i].value === volume.value) {
					SplashSettings.UpdateSelectedSource(volumes[i]);
					return;
				}
			}
		};

		SplashSettings.UpdateSelectedSource = function (volume) {
			while (authorField.firstElementChild)
				authorField.removeChild(authorField.firstElementChild);

			while (authorUrlField.firstElementChild)
				authorUrlField.removeChild(authorUrlField.firstElementChild);

			while (colorField.firstElementChild)
				colorField.removeChild(colorField.firstElementChild);

			const opt = document.createElement("option");
			opt.setAttribute("value", "");
			opt.textContent = "-----";

			authorField.appendChild(opt.cloneNode(true));
			authorUrlField.appendChild(opt.cloneNode(true));
			colorField.appendChild(opt.cloneNode(true));

			volume.fields.forEach(function (field) {
				const opt = document.createElement("option");
				opt.setAttribute("value", field.value);
				opt.textContent = field.label;

				if (field.type === "Color") {
					colorField.appendChild(opt.cloneNode(true));
				} else {
					authorField.appendChild(opt.cloneNode(true));
					authorUrlField.appendChild(opt.cloneNode(true));
				}
			});

			authorField.value = authorFieldValue;
			authorUrlField.value = authorUrlFieldValue;
			colorField.value = colorFieldValue;
		};

		SplashSettings();
	</script>

{% else %}
	<div class="field first">
		<div class="heading">
			<label class="required">Upload Volume</label>
			<div class="instructions">
				<p>Where you want to upload the images to.</p>
			</div>
		</div>
		<div class="input ltr">
			<p class="error">You haven't created any volumes yet!</p>
		</div>
	</div>
{% endif %}
